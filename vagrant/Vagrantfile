# -*- mode: ruby -*-
# vi: set ft=ruby :

# Ensure this Project is for Virtualbox Provider
ENV['VAGRANT_DEFAULT_PROVIDER'] = "virtualbox"

Vagrant.configure("2") do |config|
  # Base configuration for all VMs

  # Disable vbox GUI
  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
  end

  # Disable VirtualBox Guest Additions auto-update
  config.vbguest.auto_update = false

  # Set up synced folders
  config.vm.synced_folder ".", "/vagrant"

  # Individual VM configurations

  # Firewall Server VM
  config.vm.define "firewall" do |fw_config|
    fw_config.vm.box = "ubuntu/trusty64"
    fw_config.vm.hostname = "a31-MediTrack-firewall-server"

    # VM name
    fw_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-firewall-server"
    end

    # Internet access
    fw_config.vm.network "public_network", type: "dhcp", name: "eth2", bridge: "Intel(R) Wi-Fi 6 AX201 160MHz" #!! Remove bridge specification when running on other host devices

    fw_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # dos2unix /vagrant/init-scripts/init-fw.sh
        chmod +x /vagrant/init-scripts/init-fw.sh
        /vagrant/init-scripts/init-fw.sh
      SHELL
    end
  end

  # Application Server VM
  config.vm.define "app_server" do |app_config|
    app_config.vm.box = "ubuntu/trusty64"
    app_config.vm.hostname = "a31-MediTrack-app-server"

    # VM name
    app_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-app-server"
    end

    # Create shared folder for compiling app server code. Needs all of MediTrack, as it uses the crytpto library as well as MediTrack backend
    app_config.vm.synced_folder "../MediTrack", "/MediTrack"

    app_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        dos2unix /vagrant/init-scripts/init-app-server.sh
        chmod +x /vagrant/init-scripts/init-app-server.sh
        /vagrant/init-scripts/init-app-server.sh

        # Compile and run the Crypto library
        cd /MediTrack/CryptoLib
        dotnet publish -o ../../CryptoLibApp
        /CryptoLibApp/CryptoLib

        # Compile and run the app server code
        cd ../MediTrackBackend
        dotnet publish -o ../../MediTrackApp
        cd ../..
        /MediTrackApp/MediTrack

        # Remove the shared folder
        rm -rf /MediTrack
      SHELL
    end
  end

  # Database Server VM
  config.vm.define "db_server" do |db_config|
    db_config.vm.box = "ubuntu/trusty64"
    db_config.vm.hostname = "a31-MediTrack-db-server"

    # VM name
    db_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-db-server"
    end

    db_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        dos2unix /vagrant/init-scripts/init-db-server.sh
        chmod +x /vagrant/init-scripts/init-db-server.sh
        /vagrant/init-scripts/init-db-server.sh
      SHELL
    end
  end

  # Authentication Server
  config.vm.define "auth_server" do |auth_config|
    auth_config.vm.box = "ubuntu/trusty64"
    auth_config.vm.hostname = "a31-MediTrack-auth-server"

    # VM name
    auth_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-auth-server"
    end

    # Internet access
    auth_config.vm.network "public_network", type: "dhcp", name: "eth0", bridge: "Intel(R) Wi-Fi 6 AX201 160MHz" #!! Remove bridge specification when running on other host devices

    # Create shared folder for compiling auth server code
    auth_config.vm.synced_folder "../MediTrack/AuthServer", "/AuthServer"

    auth_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        #Run the initial setup script
        dos2unix /vagrant/init-scripts/init-auth-server.sh
        chmod +x /vagrant/init-scripts/init-auth-server.sh
        /vagrant/init-scripts/init-auth-server.sh

        # Compile the auth server code
        cd /AuthServer
        dotnet publish -o ../AuthServerApp

        # Start running the program
        cd ..
        ./AuthServerApp/AuthServer

        # Remove the shared folder
        rm -rf /AuthServer
      SHELL
    end
  end

  # Client Machine
  config.vm.define "client_machine" do |client_config|
    client_config.vm.box = "ubuntu/trusty64"
    client_config.vm.hostname = "a31-MediTrack-client-machine"

    # VM name
    client_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-client-machine"
    end

    # Internet access
    client_config.vm.network "public_network", type: "dhcp", name: "eth0", bridge: "Intel(R) Wi-Fi 6 AX201 160MHz" #!! Remove bridge specification when running on other host devices

    # Create shared folder for compiling client code
    client_config.vm.synced_folder "../MediTrack/Client", "/Client"

    client_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        dos2unix /vagrant/init-scripts/init-client-machine.sh
        chmod +x /vagrant/init-scripts/init-client-machine.sh
        /vagrant/init-scripts/init-client-machine.sh

        # Compile the Client code
        cd /Client
        dotnet publish -o ../ClientApp

        # Start running the program
        cd ..
        ./ClientApp/Client

        # Remove the shared folder
        rm -rf /Client
      SHELL
    end
  end

end
