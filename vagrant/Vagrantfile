# -*- mode: ruby -*-
# vi: set ft=ruby :

# Ensure this Project is for Virtualbox Provider
ENV['VAGRANT_DEFAULT_PROVIDER'] = "virtualbox"

Vagrant.configure("2") do |config|
  # Base configuration for all VMs

  # Disable VirtualBox Guest Additions auto-update
  config.vbguest.auto_update = false

  # Set up synced folders
  config.vm.synced_folder ".", "/vagrant"

  # Individual VM configurations
  # Application Server VM
  config.vm.define "app_server" do |app_config|
    app_config.vm.box = "generic/ubuntu2304"
    app_config.vm.hostname = "a31-MediTrack-app-server"

    # VM name
    app_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-app-server"
    end

    # Create shared folder for compiling app server code.
    app_config.vm.synced_folder "../MediTrack", "/MediTrack"

    # Enable temporary internet access for installing .NET
    app_config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", auto_correct: true

    app_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Do necessary installations
        sudo apt update
        sudo apt install -y dotnet-sdk-3.1
      SHELL
    end

    # Disable NAT for internet access
    app_config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", auto_correct: true, disabled: true

    # Internal Network sw-1
    app_config.vm.network "private_network", type: "dhcp", virtualbox__intnet: "sw-1", auto_config: false
    # Enable Promiscuous Mode for sw-1
    app_config.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end

    app_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Change to the MediTrack directory, publish the .NET program, and change back to the parent directory
        cd /MediTrack/MediTrackBackend && dotnet publish -o ../../MediTrackApp && cd ../..

        # Start running the program
        ./MediTrackApp/MediTrackBackend

        # Run the initial setup script
        chmod +x /vagrant/init-scripts/init-app-server.sh
        /vagrant/init-scripts/init-app-server.sh
      SHELL
    end
  end


  # Firewall Server VM
  config.vm.define "firewall" do |fw_config|
    fw_config.vm.box = "generic/ubuntu2304"
    fw_config.vm.hostname = "a31-MediTrack-firewall-server"

    # VM name
    fw_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-firewall-server"
    end

    # Internal Network sw-1
    fw_config.vm.network "private_network", type: "dhcp", virtualbox__intnet: "sw-1", auto_config: false
    # Enable Promiscuous Mode for sw-1
    fw_config.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end

    # Internal Network sw-2
    fw_config.vm.network "private_network", type: "dhcp", virtualbox__intnet: "sw-2", auto_config: false
    # Enable Promiscuous Mode for sw-2
    fw_config.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
    end

    # Internet access
    fw_config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", auto_correct: true

    fw_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Do necessary installations
        sudo apt update
        sudo apt install iptables -y
        sudo apt install iptables-persistent -y

        # Run initial setup script
        chmod +x /vagrant/init-scripts/init-fw.sh
        /vagrant/init-scripts/init-fw.sh
      SHELL
    end
  end

  # Database Server VM
  config.vm.define "db_server" do |db_config|
    db_config.vm.box = "generic/ubuntu2304"
    db_config.vm.hostname = "a31-MediTrack-db-server"

    # VM name
    db_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-db-server"
    end

    # Internal Network sw-2
    db_config.vm.network "private_network", type: "dhcp", virtualbox__intnet: "sw-2", auto_config: false
    # Enable Promiscuous Mode for sw-2
    db_config.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end

    db_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Might need
        # sudo apt-get install -y mysql-server

        # Run initial setup script
        chmod +x /vagrant/init-scripts/init-db-server.sh
        /vagrant/init-scripts/init-db-server.sh
      SHELL
    end
  end

  # Authentication Server
  config.vm.define "auth_server" do |auth_config|
    auth_config.vm.box = "generic/ubuntu2304"
    auth_config.vm.hostname = "a31-MediTrack-auth-server"

    # VM name
    auth_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-auth-server"
    end

    # Internet access
    fw_config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", auto_correct: true

    # Create shared folder for compiling auth server code
    auth_config.vm.synced_folder "../MediTrack/AuthServer", "/AuthServer"

    auth_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Necessary installations
        sudo apt update
        sudo apt install -y dotnet-sdk-3.1

        # Change to the AuthServer directory, publish the .NET program, and change back to the parent directory
        cd /AuthServer && dotnet publish -o ../AuthServerApp && cd ..

        # Start running the program
        ./AuthServerApp/AuthServer

        #Run the initial setup script #! No actual content in this script
        # chmod +x /vagrant/init-scripts/init-auth-server.sh
        # /vagrant/init-scripts/init-auth-server.sh
      SHELL
    end
  end

  # Client Machine
  config.vm.define "client_machine" do |client_config|
    client_config.vm.box = "generic/ubuntu2304"
    client_config.vm.hostname = "a31-MediTrack-client-machine"

    # VM name
    client_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-client-machine"
    end

    # Internet access
    fw_config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", auto_correct: true

    # Create shared folder for compiling client code
    client_config.vm.synced_folder "../MediTrack/", "/MediTrack"

    client_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        chmod +x /vagrant/init-scripts/init-client-machine.sh
        /vagrant/init-scripts/init-client-machine.sh

        # Compile the Client code
        cd /MediTrack/Client && dotnet publish -o ../../ClientApp && cd ../..

        # Start running the program
        ./ClientApp/Client
      SHELL
    end
  end
end
