# -*- mode: ruby -*-
# vi: set ft=ruby :

# Ensure this Project is for Virtualbox Provider
ENV['VAGRANT_DEFAULT_PROVIDER'] = "virtualbox"

Vagrant.configure("2") do |config|
  # Base configuration for all VMs

  # Disable VirtualBox Guest Additions auto-update
  # TODO: Should we comment this line below?
  # config.vbguest.auto_update = false

  # Set up synced folders
  config.vm.synced_folder ".", "/vagrant"

  # Individual VM configurations
  # Firewall Server VM
  config.vm.define "firewall" do |fw_config|
    fw_config.vm.box = "bento/ubuntu-20.04"
    fw_config.vm.hostname = "a31-MediTrack-firewall-server"

    # VM name
    fw_config.vm.provider "virtualbox" do |vb|
      #vb.gui = false
      vb.name = "a31-MediTrack-firewall-server"
    end

    # Internal Network sw-1
    fw_config.vm.network "private_network", type: "dhcp", virtualbox__intnet: "sw-1", auto_config: false
    # Enable Promiscuous Mode for sw-1
    fw_config.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end

    # Internal Network sw-2
    fw_config.vm.network "private_network", type: "dhcp", virtualbox__intnet: "sw-2", auto_config: false
    # Enable Promiscuous Mode for sw-2
    fw_config.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
    end

    # Internet access
    # TODO: Check if this is needed
    # fw_config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", auto_correct: true

    fw_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Do necessary installations
        sudo apt update
        sudo apt install -y iptables
        sudo apt install ufw

        # Run initial setup script
        sudo chmod +x /vagrant/init-scripts/init-fw.sh
        /bin/sh /vagrant/init-scripts/init-fw.sh
      SHELL
    end
  end

  # Application Server VM
  config.vm.define "app_server" do |app_config|
    app_config.vm.box = "bento/ubuntu-20.04"
    app_config.vm.hostname = "a31-MediTrack-app-server"

    # VM name
    app_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-app-server"
    end

    # Create shared folder for compiling app server code.
    app_config.vm.synced_folder "../MediTrack", "/MediTrack"

    # Enable temporary internet access for installing .NET
    # TODO: check if this is needed
    # app_config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", auto_correct: true

    app_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Do necessary installations
        wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
        chmod +x ./dotnet-install.sh
        /bin/bash ./dotnet-install.sh --version latest --install-dir /usr/local/bin


        # Ensure script has correct line endings for unix
        sudo apt install dos2unix && dos2unix /vagrant/init-scripts/init-app-server.sh
      SHELL
    end

    # Internal Network sw-1
    app_config.vm.network "private_network", type: "dhcp", virtualbox__intnet: "sw-1", auto_config: false
    # Enable Promiscuous Mode for sw-1
    app_config.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end

    # Disable NAT for internet access
    # TODO: check if this is needed
    # app_config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", auto_correct: true, disabled: true


    app_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Change to the MediTrack directory, publish the .NET program, and change back to the parent directory
        cd /MediTrack/MediTrackBackend && dotnet publish -o ../../MediTrackApp && dotnet restore && cd ../..

        echo "export DOTNET_ROOT=/usr/local/bin" >> /home/vagrant/.bashrc
        echo "export PATH=$PATH:$DOTNET_ROOT" >> /home/vagrant/.bashrc

        # Start running the program
        # screen -S server -dm /MediTrackApp/MediTrackBackend

        # Run the initial setup script
        sudo chmod +x /vagrant/init-scripts/init-app-server.sh
        /bin/sh /vagrant/init-scripts/init-app-server.sh
      SHELL
    end
  end

  # Database Server VM
  config.vm.define "db_server" do |db_config|
    db_config.vm.box = "bento/ubuntu-20.04"
    db_config.vm.hostname = "a31-MediTrack-db-server"

    # VM name
    db_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-db-server"
    end

    # Internal Network sw-2
    db_config.vm.network "private_network", type: "dhcp", virtualbox__intnet: "sw-2", auto_config: false
    # Enable Promiscuous Mode for sw-2
    db_config.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end

    db_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Might need
        # sudo apt-get install -y mysql-server

        # Run initial setup script
        chmod +x /vagrant/init-scripts/init-db-server.sh
        /bin/sh /vagrant/init-scripts/init-db-server.sh
      SHELL
    end
  end

  # Authentication Server
  config.vm.define "auth_server" do |auth_config|
    auth_config.vm.box = "bento/ubuntu-20.04"
    auth_config.vm.hostname = "a31-MediTrack-auth-server"

    # VM name
    auth_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-auth-server"
    end

    # Internet access
    # TODO: Check if this is needed
    # auth_config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", auto_correct: true

    # Create shared folder for compiling auth server code
    auth_config.vm.synced_folder "../MediTrack/AuthServer", "/AuthServer"

    # Install .NET and compile project
    auth_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Do necessary installations
        sudo apt update
        wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
        chmod +x ./dotnet-install.sh
        /bin/bash ./dotnet-install.sh --version latest --install-dir /usr/local/bin

        echo "export DOTNET_ROOT=/usr/local/bin" >> /home/vagrant/.bashrc
        echo "export PATH=$PATH:$DOTNET_ROOT" >> /home/vagrant/.bashrc

        # Ensure script has correct line endings for unix
        sudo apt install dos2unix && dos2unix /vagrant/init-scripts/init-app-server.sh

        # Change to the AuthServer directory, publish the .NET program, and change back to the parent directory
        cd /AuthServer && dotnet publish -o ../AuthServerApp && cd ..

        # Start running the program
        # screen -dm /AuthServerApp/AuthServer
      SHELL
    end
  end

  # Client Machine
  config.vm.define "client_machine" do |client_config|
    client_config.vm.box = "bento/ubuntu-20.04"
    client_config.vm.hostname = "a31-MediTrack-client-machine"

    # VM name
    client_config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.name = "a31-MediTrack-client-machine"
    end

    # Internet access
    # TODO: Check if this is needed
    # client_config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh", auto_correct: true

    # Create shared folder for compiling client code
    client_config.vm.synced_folder "../MediTrack/", "/MediTrack"

    client_config.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Do necessary installations
        sudo apt update
        wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
        chmod +x ./dotnet-install.sh
        /bin/bash ./dotnet-install.sh --version latest --install-dir /usr/local/bin

        echo "export DOTNET_ROOT=/usr/local/bin" >> /home/vagrant/.bashrc
        echo "export PATH=$PATH:$DOTNET_ROOT" >> /home/vagrant/.bashrc

        # Ensure script has correct line endings for unix
        # sudo apt install dos2unix && dos2unix /vagrant/init-scripts/init-client-machine.sh

        # Compile the Client code
        cd /MediTrack/Client && dotnet publish -o ../../ClientApp && cd ../..

        # Start running the program
        # /ClientApp/Client
      SHELL
    end
  end
end
